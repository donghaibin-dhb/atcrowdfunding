# For JBoss: Avoid to setup Log4J outside $JBOSS_HOME/server/default/deploy/log4j.xml!
# For all other servers: Comment out the Log4J listener in web.xml to activate Log4J.

#log4j主要的作用就是将日志显示出来，可以根据设置的日志的级别来显示日志，同时也可以指定日志存储的位置：

# DEBUG < INFO < WARN < ERROR < FATAL
#将debug级别的日志输出到a,和logfile;a和logfile可以任意的名字
log4j.rootLogger=DEBUG, a, logfile
#log4j设置显示到console；org.apache.log4j.ConsoleAppender定义为控制台。
#a输出的类型是控制台：
log4j.appender.a=org.apache.log4j.ConsoleAppender
#指定输出端的layout是哪种类型，org.apache.log4j.PatternLayout（灵活的指定布局）
#org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
#org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）
log4j.appender.a.layout=org.apache.log4j.PatternLayout
#设置console显示的格式


#如果使用pattern布局就要指定的打印信息的具体格式ConversionPattern，打印参数如下：
#%m 输出代码中指定的消息；
#%M 输出打印该条日志的方法名；
#%p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL；
#%r 输出自应用启动到输出该log信息耗费的毫秒数；
#%c 输出所属的类目，通常就是所在类的全名；
#%t 输出产生该日志事件的线程名；
#%n 输出一个回车换行符，Windows平台为"rn”，Unix平台为"n”；
#%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyyy-MM-dd HH:mm:ss,SSS}，输出类似：2002-10-18 22:10:28,921；
#%l 输出日志事件的发生位置，及在代码中的行数；
#[QC]是log信息的开头，可以为任意字符，一般为项目简称。
log4j.appender.a.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss,S} %-5p [%c] %l - %m%n
#日志文件滚动：文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.logfile=org.apache.log4j.RollingFileAppender
#存放日志文件：
log4j.appender.logfile.File=log.log
#存放日志文件的大小：
log4j.appender.logfile.MaxFileSize=512KB
# Keep three backup files.设置备份保存三个文件，
log4j.appender.logfile.MaxBackupIndex=3 
# Pattern to output: date priority [category] - message
log4j.appender.logfile.layout=org.apache.log4j.PatternLayout
log4j.appender.logfile.layout.ConversionPattern=%d %p [%c] - %m%n
